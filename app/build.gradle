plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "com.jmm.nasaastronomicallook"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildFeatures {
            dataBinding true
        }
    }

    buildTypes {
        debug {
            debuggable = true
            buildConfigField "String", 'API_URL', '"https://api.nasa.gov/"'
            buildConfigField "String", 'API_KEY', '"DEMO_KEY"'
        }

        release {
            minifyEnabled false
            buildConfigField "String", 'API_URL', '"https://api.nasa.gov/"'
            buildConfigField "String", 'API_KEY', '"nVpEt8pCc1Fd09DChBPzhJ4A3WtKlxvdAO9K9GWI"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

// work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerView_version"
    implementation "com.google.android.material:material:$material_version"

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp3_version")

    implementation("com.jakewharton.threetenabp:threetenabp:$threeTenAbp_version")

    testImplementation("org.threeten:threetenbp:$threeTenBp_version") {
        exclude group: 'com.jakewharton.threetenabp', module: 'threetenabp'
    }



    // Koin for Android
    implementation "io.insert-koin:koin-android:$koin_version"

    // Koin Test
    testImplementation "io.insert-koin:koin-test:$koin_version"
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    // Koin for Kotlin apps
    implementation "io.insert-koin:koin-core:$koin_version"
    // Testing
    testImplementation "io.insert-koin:koin-test:$koin_version"


    implementation("io.coil-kt:coil:$coil_version")
    implementation("io.coil-kt:coil-gif:$coil_version")

    //TEST
    testImplementation ("junit:junit:$junit_version")
    androidTestImplementation ('androidx.test.ext:junit:1.1.3')
    androidTestImplementation ('androidx.test.espresso:espresso-core:3.4.0')

    testImplementation("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version")
    testImplementation("junit:junit:$junit_version")
    testImplementation("org.mockito:mockito-core:$mockito_version")
    testImplementation("com.nhaarman:mockito-kotlin:$mockitoKotlin_version")
    testImplementation("com.squareup.retrofit2:retrofit-mock:$retrofitMock_version")
    testImplementation("com.squareup.okhttp3:mockwebserver:$okhttp3_version")
    testImplementation("org.powermock:powermock-core:$powermock_version")
    testImplementation("org.powermock:powermock-module-junit4:$powermock_version")
    testImplementation("org.powermock:powermock-module-junit4-rule:$powermock_version")
    testImplementation("org.powermock:powermock-api-mockito2:$powermock_version")
    testImplementation("com.squareup.assertj:assertj-android:$assertj_version")
    testImplementation("org.amshove.kluent:kluent:$kluent_version")
}
